UDF: FUNCTION PDLTOOLS_SCHEMA.re(PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.+(double precision,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_pl(PDLTOOLS_SCHEMA.complex, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complexabs(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.mul(PDLTOOLS_SCHEMA.complex, pg_catalog.float8)
UDF: FUNCTION PDLTOOLS_SCHEMA.numeric2point(pg_catalog.numeric)
UDO: OPERATOR PDLTOOLS_SCHEMA.*(PDLTOOLS_SCHEMA.complex,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.pl(PDLTOOLS_SCHEMA.complex, pg_catalog.float8)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_trig(pg_catalog.float8, pg_catalog.float8)
UDO: OPERATOR PDLTOOLS_SCHEMA.+(PDLTOOLS_SCHEMA.complex,double precision)
UDF: FUNCTION PDLTOOLS_SCHEMA.abs(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_mul(PDLTOOLS_SCHEMA.complex, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.float82complex(pg_catalog.float8)
UDO: OPERATOR PDLTOOLS_SCHEMA./(double precision,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.radians(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.asin(PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.-(PDLTOOLS_SCHEMA.complex,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.dotproduct(PDLTOOLS_SCHEMA._complex, PDLTOOLS_SCHEMA._complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.-(double precision,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.mul(pg_catalog.float8, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.cbrt(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.tan(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.float42complex(pg_catalog.float4)
UDF: FUNCTION PDLTOOLS_SCHEMA.degrees(PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.-(NONE,PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.=(PDLTOOLS_SCHEMA.complex,PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.@(NONE,PDLTOOLS_SCHEMA.complex)
UDT: TYPE PDLTOOLS_SCHEMA._complex
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_in(pg_catalog.cstring)
UDF: FUNCTION PDLTOOLS_SCHEMA.cot(PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.+(NONE,PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.-(PDLTOOLS_SCHEMA.complex,double precision)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_send(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.int22complex(pg_catalog.int2)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_cbrt(PDLTOOLS_SCHEMA.complex)
UDT: TYPE PDLTOOLS_SCHEMA.complex
UDO: OPERATOR PDLTOOLS_SCHEMA.|/(NONE,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.acos(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.exp(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_sqrt(PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.^(PDLTOOLS_SCHEMA.complex,double precision)
UDF: FUNCTION PDLTOOLS_SCHEMA.ln(PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.*(double precision,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.sqrt(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.cos(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_eq(PDLTOOLS_SCHEMA.complex, PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.||/(NONE,PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.*(PDLTOOLS_SCHEMA.complex,double precision)
UDF: FUNCTION PDLTOOLS_SCHEMA.sin(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_mi(PDLTOOLS_SCHEMA.complex, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.im(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.int82complex(pg_catalog.int8)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_ne(PDLTOOLS_SCHEMA.complex, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_um(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.mi(PDLTOOLS_SCHEMA.complex, pg_catalog.float8)
UDF: FUNCTION PDLTOOLS_SCHEMA.log(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.conj(PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.<>(PDLTOOLS_SCHEMA.complex,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_recv(pg_catalog.internal)
UDF: FUNCTION PDLTOOLS_SCHEMA.div(PDLTOOLS_SCHEMA.complex, pg_catalog.float8)
UDF: FUNCTION PDLTOOLS_SCHEMA.mi(pg_catalog.float8, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.atan(PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.div(pg_catalog.float8, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_div(PDLTOOLS_SCHEMA.complex, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_up(PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA.+(PDLTOOLS_SCHEMA.complex,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_out(PDLTOOLS_SCHEMA.complex)
UDO: OPERATOR PDLTOOLS_SCHEMA./(PDLTOOLS_SCHEMA.complex,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex_power(PDLTOOLS_SCHEMA.complex, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.int42complex(pg_catalog.int4)
UDO: OPERATOR PDLTOOLS_SCHEMA./(PDLTOOLS_SCHEMA.complex,double precision)
UDO: OPERATOR PDLTOOLS_SCHEMA.^(PDLTOOLS_SCHEMA.complex,PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.power(PDLTOOLS_SCHEMA.complex, pg_catalog.float8)
UDF: FUNCTION PDLTOOLS_SCHEMA.log(PDLTOOLS_SCHEMA.complex, PDLTOOLS_SCHEMA.complex)
UDF: FUNCTION PDLTOOLS_SCHEMA.complex(pg_catalog.float8, pg_catalog.float8)
UDF: FUNCTION PDLTOOLS_SCHEMA.pl(pg_catalog.float8, PDLTOOLS_SCHEMA.complex)
