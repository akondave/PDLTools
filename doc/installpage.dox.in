/**

@page installpage

## Getting DS Tools

The latest GPPKG version of the DS Tools library can be found here: 
 - <A HREF="gppkg/dstools-@DSTOOLS_VERSION_STRING@-gpdb4.2-rhel5-x86_64.gppkg">DS Tools @DSTOOLS_VERSION_STRING@ GPPKG for GPDB 4.2</A HREF>
 - <A HREF="gppkg/dstools-@DSTOOLS_VERSION_STRING@-gpdb4.3-rhel5-x86_64.gppkg">DS Tools @DSTOOLS_VERSION_STRING@ GPPKG for GPDB 4.3</A HREF>

Alternatively, DS Tools can be installed from its RPM:
 - <A HREF="rpm/dstools-@DSTOOLS_VERSION_STRING@-gpdb4.2-Linux.rpm">DS Tools @DSTOOLS_VERSION_STRING@ RPM for GPDB 4.2</A HREF>
 - <A HREF="rpm/dstools-@DSTOOLS_VERSION_STRING@-gpdb4.3-Linux.rpm">DS Tools @DSTOOLS_VERSION_STRING@ RPM for GPDB 4.3</A HREF>

This documentation is also available as an
<A HREF="manual/dstools-@DSTOOLS_VERSION_STRING@-manual.tgz">HTML tar ball</A>
and as a
<A HREF="manual/dstools-@DSTOOLS_VERSION_STRING@-manual.pdf">PDF</A> file,
for it to be installed together with the library and available when using it.
____

## Installation of DS Tools

### Prerequisites

DS Tools should be installed on a GPDB 4.2 or 4.3. It requires `PL/pgSQL`, `PL/C`, `PL/Python` and `PL/Perl`.
The `Python` version should be at least 2.6, and the `Perl` version should be at least 5.008 but lower than 6.0.

<pre class="example">
gppkg -i dstools-1.2-gpdb4.2-rhel5-x86_64.gppkg
</pre>

For GPDB 4.2 or the equivalent for GPDB 4.3. Run this as gpadmin.

@verbatim
$ gppkg -i dstools-1.2-gpdb4.2-rhel5-x86_64.gppkg
20140721:05:41:13:021769 gppkg:gp-single-host:gpadmin-[INFO]:-Starting gppkg with args: -i dstools-1.2-gpdb4.2-rhel5-x86_64.gppkg
20140721:05:41:13:021769 gppkg:gp-single-host:gpadmin-[INFO]:-Installing package dstools-1.2-gpdb4.2-rhel5-x86_64.gppkg
20140721:05:41:13:021769 gppkg:gp-single-host:gpadmin-[INFO]:-Validating rpm installation cmdStr='rpm --test -i /usr/local/greenplum-db-4.2.1.0/.tmp/dstools-1.2-1.x86_64.rpm --dbpath /usr/local/greenplum-db-4.2.1.0/share/packages/database --prefix /usr/local/greenplum-db-4.2.1.0'
20140721:05:41:13:021769 gppkg:gp-single-host:gpadmin-[INFO]:-Installing dstools-1.2-gpdb4.2-rhel5-x86_64.gppkg locally
20140721:05:41:13:021769 gppkg:gp-single-host:gpadmin-[INFO]:-Validating rpm installation cmdStr='rpm --test -i /usr/local/greenplum-db-4.2.1.0/.tmp/dstools-1.2-1.x86_64.rpm --dbpath /usr/local/greenplum-db-4.2.1.0/share/packages/database --prefix /usr/local/greenplum-db-4.2.1.0'
20140721:05:41:13:021769 gppkg:gp-single-host:gpadmin-[INFO]:-Installing rpms cmdStr='rpm -i /usr/local/greenplum-db-4.2.1.0/.tmp/dstools-1.2-1.x86_64.rpm --dbpath /usr/local/greenplum-db-4.2.1.0/share/packages/database --prefix=/usr/local/greenplum-db-4.2.1.0'
20140721:05:41:13:021769 gppkg:gp-single-host:gpadmin-[INFO]:-Completed local installation of dstools-1.2-gpdb4.2-rhel5-x86_64.gppkg.
20140721:05:41:13:021769 gppkg:gp-single-host:gpadmin-[INFO]:-Please run the following command to deploy DS Tools
usage:  dspack install [-s schema_name] [-S sugar_schema_name]
                       [-M madlib_schema_name] -c user@host:port/database
Example:
   $ $GPHOME/dstools/bin/dspack install -s dstools -c gpadmin@mdw:5432/testdb
   This will install DSTools objects into a Greenplum database named "testdb"
   running on server "mdw" on port 5432. Installer will try to login as
   "gpadmin" and will prompt for password. The target schema for the main
   library will be "dstools" (specified here explicitly) and the target
   schema for the SUgAR library, packaged with it, will be "sugarlib"
   (specified here implicitly). MADlib objects will be searched for in the
   "madlib" schema (also specified here implicitly).
   In all cases, these schema choices are the default options.

To uninstall the package, use "gppkg -r".
For additional options run:
$ dspack --help
Release notes and additional documentation can be found at
https://sites.google.com/a/pivotal.io/global-data-science/ds-tools,
as well as on http://pdl-dstools.pa.gopivotal.com/
accessible through the Pivotal VPN.
20140721:05:41:13:021769 gppkg:gp-single-host:gpadmin-[INFO]:-dstools-1.2-gpdb4.2-rhel5-x86_64.gppkg successfully installed.
@endverbatim

### Installing DS Tools onto a target database

<pre class="example">
/usr/local/greenplum-db/dstools/bin/dspack install [-s <em>schema name</em>] [-S <em>SUgAR schema name</em>] [-M <em>MADlib schema name</em>] -c <em>user\@host:port/database name</em>
</pre>

where <em>database name</em> should be replaced by the name of the database you wish to install to, <em>schema name</em> is the schema to install to, <em>SUgAR schema name</em> is the schema in which to install the SUgAR library, and <em>MADlib schema name</em> is the schema to search for MADlib objects in. By default, <em>schema name</em> would be "dstools", <em>SUgAR schema name</em> would be "sugarlib" and <em>MADlib schema name</em> would be "madlib". Typically, <em>user\@host:port</em> is chosen to be "gpadmin@localhost:5433", as in the example below. MADlib objects do not need to be present during DS Tools installation for it to succeed, though some of the run-time functionality of DS Tools relies on calling MADlib routines.
Run this command as gpadmin.

@verbatim
$ /usr/local/greenplum-db/dstools/bin/dspack install -s dstools -c gpadmin@localhost:5433/exampledb
dspack.py : INFO : Detected greenplum version 4.2.
dspack.py : INFO : Testing PL/Python environment...
dspack.py : INFO : > PL/Python environment OK (version: 2.6.2)
dspack.py : INFO : Testing PL/Perl environment...
dspack.py : INFO : > PL/Perl environment OK (version: 5.008008)
dspack.py : INFO : Testing PL/R environment...
dspack.py : INFO : > PL/R environment OK (version: 2.13.0)
dspack.py : INFO : Installing dstools into DSTOOLS schema and SUgAR into SUGARLIB schema...
dspack.py : INFO : Looking for MADlib installation in MADLIB schema...
dspack.py : INFO : ***************************************************************************
dspack.py : INFO : * Schema DSTOOLS already exists and includes library objects.
dspack.py : INFO : * Installed version is 1.1.2.
dspack.py : INFO : * Installer will rename it to DSTOOLS_V1_1_2 and will upgrade to version 1.2.
dspack.py : INFO : ***************************************************************************
dspack.py : INFO : ***************************************************************************
dspack.py : INFO : * Schema SUGARLIB already exists and includes library objects.
dspack.py : INFO : * Installed version is 0.4.3.
dspack.py : INFO : * Installer will rename it to SUGARLIB_V0_4_3 and will upgrade to version 0.4.4.
dspack.py : INFO : ***************************************************************************
dspack.py : INFO : Would you like to continue?
>>> y
dspack.py : INFO : > Renaming schema DSTOOLS to DSTOOLS_V1_1_2
dspack.py : INFO : > Renaming schema SUGARLIB to SUGARLIB_V0_4_3
dspack.py : INFO : > Creating DSTOOLS schema
dspack.py : INFO : > Creating SUGARLIB schema
dspack.py : INFO : > Granting usage on DSTOOLS schema
dspack.py : INFO : > Granting usage on SUGARLIB schema
dspack.py : INFO : > Updating DS Tools migration history.
dspack.py : INFO : > Creating DSTOOLS.MigrationHistory table
dspack.py : INFO : > Saving data from DSTOOLS_V1_1_2.MigrationHistory table
dspack.py : INFO : > Writing version info in DSTOOLS.MigrationHistory table
dspack.py : INFO : > Updating SUgAR migration history.
dspack.py : INFO : > Creating SUGARLIB.MigrationHistory table
dspack.py : INFO : > Saving data from SUGARLIB_V0_4_3.MigrationHistory table
dspack.py : INFO : > Writing version info in SUGARLIB.MigrationHistory table
dspack.py : INFO : > Creating objects for modules:
dspack.py : INFO : > - common
dspack.py : INFO : > - uri_utils
dspack.py : INFO : > - edit_distance
dspack.py : INFO : > - anonymization
dspack.py : INFO : > - session
dspack.py : INFO : > - connected_components
dspack.py : INFO : > - sugar
dspack.py : INFO : > - complex
dspack.py : INFO : DSTools 1.2 installed successfully in DSTOOLS schema.
dspack.py : INFO : Keep old schema DSTOOLS_V1_1_2? [Y/N]
>>> n
dspack.py : INFO : SUgAR 0.4.4 installed successfully in SUGARLIB schema.
dspack.py : INFO : Keep old schema SUGARLIB_V0_4_3? [Y/N]
>>> n
dspack.py : INFO : Installation completed successfully.
@endverbatim

Note that this installation may be interactive, asking yes/no questions.

### Checking that the installation was successful (optional)

Once you've installed the package onto your database, you may want to check that the installation was successful. The `install-check` option give you a method to do so.

<pre class="example">
/usr/local/greenplum-db/dstools/bin/dspack install-check [-s <em>schema name</em>] [-S <em>SUgAR schema name</em>] [-M <em>MADlib schema name</em>] -c <em>user\@host:port/database name</em>
</pre>

where <em>database name</em> should be replaced by the name of the database you installed to, and <em>schema name</em>, <em>SUgAR schema name</em> and <em>MADlib schema name</em> are the schemas (with the same defaults as in the installation command).

Run this command as gpadmin.

@verbatim
$ /usr/local/greenplum-db/dstools/bin/dspack install-check -s dstools -c gpadmin@localhost:5433/exampledb
dspack.py : INFO : Detected greenplum version 4.2.
TEST CASE RESULT|Module: uri_utils|test_uri_utils.sql_in|PASS|Time: 29 milliseconds
TEST CASE RESULT|Module: edit_distance|test_edit_distance.sql_in|PASS|Time: 35 milliseconds
TEST CASE RESULT|Module: anonymization|test_anonymization.sql_in|PASS|Time: 660 milliseconds
TEST CASE RESULT|Module: session|test_session.sql_in|PASS|Time: 305 milliseconds
TEST CASE RESULT|Module: connected_components|test_connected_components.sql_in|PASS|Time: 1358 milliseconds
TEST CASE RESULT|Module: sugar|test_sugar.sql_in|PASS|Time: 3080 milliseconds
TEST CASE RESULT|Module: complex|test_complex_type.sql_in|PASS|Time: 316 milliseconds
TEST CASE RESULT|Module: nlp|test_porter_stemmer.sql_in|PASS|Time: 34 milliseconds
@endverbatim


____


## Upgrading

Starting with version 1.1 of DS Tools, upgrading is done using exactly the same commands as a fresh installation. The program will automatically detect the existing version and offer to back it up as part of the upgrade. If the upgrade is unsuccessful for any reason, the system will properly roll back the database to its prior state.
The DS Tools installer will warn when installing a version that is already installed and will correctly detect and stop the installation when the new version is lower than the target version. If you really want to downgrade to an earlier version of DS Tools, you will want to uninstall and reinstall, as explained below.

___


## Uninstalling

It is not necessary to uninstall DS Tools as part of a regular upgrade process. However, if you wish to uninstall the library, this section describes how to do so.
First, uninstall the library from your computer.

<pre class="example">
gppkg -r dstools-1.2
</pre>

Then, drop the schemas from your database. Assuming the library was installed into the \c dstools and \c sugarlib schemas, the `psql` command line is

<pre class="example">
DROP SCHEMA IF EXISTS dstools CASCADE;
DROP SCHEMA IF EXISTS sugarlib CASCADE;
</pre>


____


*/
